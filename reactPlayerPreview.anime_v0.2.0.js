"use strict";(self.webpackChunkanime=self.webpackChunkanime||[]).push([["reactPlayerPreview"],{"./node_modules/react-player/dist/Preview.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ Preview_default)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n\nconst ICON_SIZE = "64px";\nconst cache = {};\nconst Preview = ({\n  src,\n  light,\n  oEmbedUrl,\n  onClickPreview,\n  playIcon,\n  previewTabIndex,\n  previewAriaLabel\n}) => {\n  const [image, setImage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!src || !light || !oEmbedUrl) return;\n    fetchImage({ src, light, oEmbedUrl });\n  }, [src, light, oEmbedUrl]);\n  const fetchImage = async ({\n    src: src2,\n    light: light2,\n    oEmbedUrl: oEmbedUrl2\n  }) => {\n    if (react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(light2)) {\n      return;\n    }\n    if (typeof light2 === "string") {\n      setImage(light2);\n      return;\n    }\n    if (cache[src2]) {\n      setImage(cache[src2]);\n      return;\n    }\n    setImage(null);\n    const response = await fetch(oEmbedUrl2.replace("{url}", src2));\n    const data = await response.json();\n    if (data.thumbnail_url) {\n      const fetchedImage = data.thumbnail_url.replace("height=100", "height=480").replace("-d_295x166", "-d_640");\n      setImage(fetchedImage);\n      cache[src2] = fetchedImage;\n    }\n  };\n  const handleKeyPress = (e) => {\n    if (e.key === "Enter" || e.key === " ") {\n      onClickPreview == null ? void 0 : onClickPreview(e);\n    }\n  };\n  const handleClick = (e) => {\n    onClickPreview == null ? void 0 : onClickPreview(e);\n  };\n  const isElement = react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(light);\n  const flexCenter = {\n    display: "flex",\n    alignItems: "center",\n    justifyContent: "center"\n  };\n  const styles = {\n    preview: {\n      width: "100%",\n      height: "100%",\n      backgroundImage: image && !isElement ? `url(${image})` : void 0,\n      backgroundSize: "cover",\n      backgroundPosition: "center",\n      cursor: "pointer",\n      ...flexCenter\n    },\n    shadow: {\n      background: "radial-gradient(rgb(0, 0, 0, 0.3), rgba(0, 0, 0, 0) 60%)",\n      borderRadius: ICON_SIZE,\n      width: ICON_SIZE,\n      height: ICON_SIZE,\n      position: isElement ? "absolute" : void 0,\n      ...flexCenter\n    },\n    playIcon: {\n      borderStyle: "solid",\n      borderWidth: "16px 0 16px 26px",\n      borderColor: "transparent transparent transparent white",\n      marginLeft: "7px"\n    }\n  };\n  const defaultPlayIcon = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { style: styles.shadow, className: "react-player__shadow" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { style: styles.playIcon, className: "react-player__play-icon" }));\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    "div",\n    {\n      style: styles.preview,\n      className: "react-player__preview",\n      tabIndex: previewTabIndex,\n      onClick: handleClick,\n      onKeyPress: handleKeyPress,\n      ...previewAriaLabel ? { "aria-label": previewAriaLabel } : {}\n    },\n    isElement ? light : null,\n    playIcon || defaultPlayIcon\n  );\n};\nvar Preview_default = Preview;\n\n\n\n//# sourceURL=webpack://anime/./node_modules/react-player/dist/Preview.js?\n}')}}]);